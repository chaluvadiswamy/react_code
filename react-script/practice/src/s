import React, { useState, useEffect } from 'react';

export default function Search() {
    const [query, setQuery] = useState('');
    const [results, setResults] = useState([]);
    const [selected, setSelected] = useState('');

    useEffect(() => {
        async function fetchData() {
            try {
                const response = await fetch(`https://randomuser.me/api/?results=5000`);
                const data = await response.json();
                if (data.results) {
                    setResults(data.results);
                } else {
                    console.error('No results found in data:', data);
                }
            } catch (error) {
                console.error('Error fetching data:', error);
            }
        }

        fetchData();
    }, []); // Empty dependency array means this effect runs only once on mount

    const filteredResults = results.filter(user =>
        user.name.first.toLowerCase().includes(query.toLowerCase()) ||
        user.name.last.toLowerCase().includes(query.toLowerCase())
    );

    const handleUserSelect = (user) => {
        setSelected(`${user.name.first} ${user.name.last}`);
        // You can perform other actions here based on the selected user
    };

    return (
        <div>
            <input
                type="text"
                placeholder="Search..."
                value={query}
                onChange={(e) => setQuery(e.target.value)}
            />
            <ul>
                {filteredResults.map((user, index) => (
                    <li key={index} onClick={() => handleUserSelect(user)}>
                        {user.name.first} {user.name.last}
                    </li>
                ))}
            </ul>
            <p>Selected user: {selected}</p>
        </div>
    );
}
